{"mappings":"gfAiCA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAkBvC,SAASC,EAAcC,EAAUC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAEL,WAAUC,SAC3B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC5BC,YAAW,WACNP,EACHK,EAAQF,GAERG,EAAOH,E,GAENJ,E,IA3BLL,EAAQc,iBAAiB,UAEzB,SAAsBC,GACrBA,EAAIC,iBAEJ,IADA,IAAIC,EAAQC,OAAOlB,EAAQK,MAAMc,OACxBC,EAAI,EAAGA,GAAKpB,EAAQqB,OAAOF,MAAOC,GAAK,EAC/CjB,EAAciB,EAAGH,GACfK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBP,EAAA0B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE7DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACnBP,EAAA0B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE5DY,GAASC,OAAOlB,EAAQ6B,KAAKV,M","sources":["src/js/03-promises.js"],"sourcesContent":["// const firstDelayEl = document.querySelector('[name=\"delay\"]');\n// const stepDelayEl = document.querySelector('[name=\"step\"]');\n// const amountEl = document.querySelector('[name=\"amount\"]');\n// const submitBtnEl = document.querySelector('[type=\"submit\"]');\n\n// submitBtnEl.addEventListener('submit', createPromise);\n// const delay = firstDelayEl.value;\n// const step = stepDelayEl.value;\n// const amount = amountEl.value;\n\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(`✅ Fulfilled promise ${position} in ${delay} ms`);\n//       } else {\n//         reject(`❌ Rejected promise ${position} in ${delay} ms`);\n//       }\n//     }, delay);\n//   });\n// }\n\n// createPromise(2, 1500)\n//   .then(value=> {\n//     console.log(value);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   });\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n\tevt.preventDefault();\n\tlet delay = Number(formRef.delay.value);\n\tfor (let i = 1; i <= formRef.amount.value; i += 1) {\n\t\tcreatePromise(i, delay)\n\t\t\t.then(({ position, delay }) => {\n\t\t\t\tNotify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t\t\t})\n\t\t\t.catch(({ position, delay }) => {\n\t\t\t\tNotify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t\t\t});\n\t\tdelay += Number(formRef.step.value);\n\t}\n}\n\nfunction createPromise(position, delay) {\n\tconst shouldResolve = Math.random() > 0.3;\n\tconst object = { position, delay };\n\treturn new Promise((resolve, reject)  => {\n\t\tsetTimeout(() => {\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve(object);\n\t\t\t} else {\n\t\t\t\treject(object);\n\t\t\t}\n\t\t}, delay);\n}); \n\t}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","object","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","i","amount","then","param","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.11d933d6.js.map"}